<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScaleOut.Streaming.DigitalTwin.Common</name>
    </assembly>
    <members>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.AsyncHelper">
            <summary>
            Helper class to properly run asynchronous methods within a synchronous one.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.AsyncHelper.RunSync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Runs an asynchronous Task method which does not return value synchronously,
            e.g. AsyncHelper.RunSync(() => AsyncMethod()).
            </summary>
            <param name="task">The task method to execute.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.AsyncHelper.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Runs an asynchronous Task{T} method that returns T type synchronously,
            e.g. TResult result = AsyncHelper.RunSync(() => AsyncMethod{TResult}()).
            </summary>
            <typeparam name="TResult">Return Type.</typeparam>
            <param name="task">The <see cref="T:System.Threading.Tasks.Task`1"/> method to execute.</param>
            <returns>The method result type of TResult.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorState">
            <summary>Controls connector's states.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorState.Unknown">
            <summary>The connector's state is unknown.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorState.Started">
            <summary>When this flag is set, connector is started, otherwise it is stopped.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorState.Enabled">
            <summary>When this flag is set, connector is enabled, otherwise it is disabled.</summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.InitialConnectorState">
            <summary>
            Indicates the initial state for Connector after it's started.
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.InitialConnectorState.Enabled">
            <summary>Connector starts in Enabled state.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.InitialConnectorState.Disabled">
            <summary>Connector starts in Disabled state.</summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand">
            <summary>
            These commands are used for setting a correct state for
            digital twin connectors.
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.Start">
            <summary>Sets the Started bit in Connector's state object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.StartAsEnabled">
            <summary>Sets the Started and Enabled bits in Connector's state object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.StartAsDisabled">
            <summary>Sets the Started and clears Enabled bits in Connector's state object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.Stop">
            <summary>Clears the Started bit in Connector's state object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.Enable">
            <summary>Sets the Enabled bit in Connector's state object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ConnectorControlCommand.Disable">
            <summary>Clears the Enabled bit in Connector's state object.</summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata">
            <summary>
            The connector's metadata object which is stored in a shared namespace 
            "__connector_metadata" for all connectors. It stores state and stats of
            the corresponding connector.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.ConnectorState">
            <summary>State of the digital twin connector.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.#ctor">
            <summary>
            Public parameterless constructor.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.#ctor(Scaleout.Streaming.DigitalTwin.Common.ConnectorState)">
            <summary>
            Public constructor used by JsonSerializer when deserializing the object.
            </summary>
            <param name="connectorState">Connector's state.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.GetConnectorStateAsString">
            <summary>
            Checks and returns the state of the digital twin connector.
            </summary>
            <returns>The current connector's state.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.ToJson(Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata)">
            <summary>
            Serializes this type of object into the JSON formatted object.
            </summary>
            <param name="obj">The <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata"/> object to serialize.</param>
            <returns>The JSON formated object type of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata"/>.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.FromJson(System.String)">
            <summary>
            Deserializes the JSON object into the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata"/> instance.
            </summary>
            <param name="jsonObject">The JSON formated object type of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata"/></param>
            <returns>The <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata"/> type of object.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.SerializeToByteArrayUsingJson(System.IO.Stream,System.Object)">
            <summary>
            Helper method for serializing the object to JSON and then to store
            it as byte[].
            </summary>
            <param name="stream">Stream to write object's bytes to.</param>
            <param name="obj">Object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ConnectorMetadata.DeserializeFromByteArrayUsingJson(System.IO.Stream)">
            <summary>
            Helper method for deserializing the object from byte[]
            back to JSON and then to the instance of this class.
            </summary>
            <param name="stream">Stream containing the serialized bytes of the object.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.Constants">
            <summary>
            Helper class with projects constants.
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.StatsMetadataNamespace">
            <summary>Namespace for stats metadata object.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.StatsMetadataKey">
            <summary>String key for stats metadata object used by AgentService to rerun stats invoke.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.DigitalTwinStatsNamespace">
            <summary>Namespace for DigitalTwin statistics.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.ConnectorStatsNamespace">
            <summary>Namespace for Connector statistics.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MetadataNamedCache">
            <summary>Named cache where digital twin metadata objects are stored.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.AzureIoTHubConnectorIGSuffix">
            <summary>The suffix of the Azure IoT Connector's invocation grid.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.AzureIoTHubConnectorNamespaceSuffix">
            <summary>The suffix of the Azure IoT Connector's metadata namespace.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.SharedConnectorMetadataNamespace">
            <summary>The shared namespace for all connectors' metadata.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.WidgetModelsNamespace">
            <summary>Namespace containing models' schema information (for use by widgets).</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.DefaultTargetEventNamespace">
            <summary>Named cache name where all unidentified Azure IoT Hub messages will be routed.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.LogMessagesNamespace">
            <summary>Named cache name where all user's logging messages are stored.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.BuiltInServerIG">
            <summary>Built-in IG used for in-server invoke operations (log queue operations, currently)</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MessagingRESTServiceNamespace">
            <summary>The Messaging REST service namespace where queue-based objects
            are created by each model when user's code needs to send messages back to "source"</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MessagingRESTServiceConnectorIG">
            <summary>IG name for the Messaging REST service.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MessagingRESTServiceIGId">
            <summary>IG ID for the Messaging REST service. If the <see cref="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MessagingRESTServiceConnectorIG"/> 
            name changes, the this Id must be recalculated!</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.LEFT_SQUARE_BRACKET">
            <summary>UTF8 code for left square bracket.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.RIGHT_SQUARE_BRACKET">
            <summary>UTF8 code for right square bracket.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.COMMA">
            <summary>UTF8 code for comma.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.AZURE_IOT_CONN_MIN_ALLOWED_BATCH_SIZE_UPPER_LIMIT">
            <summary>The lowest allowed value for the maximum number of messages that can be processed by Azure IoT Connectore at once as a group.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.AZURE_IOT_CONN_MAX_ALLOWED_BATCH_SIZE_UPPER_LIMIT">
            <summary>The highest allowed value for the maximum number of messages that can be processed by Azure IoT Connectore at once as a group.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MAX_LIST_SIZE">
            <summary>
            Default initial value for the maximum size of a message list that
            contains all digital twin processed messages (not used now).
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.FREQ_TIME_INTERVAL_FOR_MSG_LIST_TRIMMING">
            <summary>
            Specifies the minimum time interval on how often the message list gets trimmed when
            the number of elements exceeds <see cref="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MAX_LIST_SIZE"/>.
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.MAX_TIMEOUT_SECONDS">
            <summary>The maximum timeout we can set now for IG (in seconds).</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.Constants.NO_LISTENER_APPID">
            <summary>
            -1 here indicates that this appId does not have an ability to listen for messages from the digital twins.
            </summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.JsonCustomSerializer">
            <summary>
            Both, generic and non-generic, versions of JSON serializers for 
            digital twin library.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.JsonCustomSerializer.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Custom serialization callback for serializing objects
            to store them in ScaleOut StreamServer.
            </summary>
            <param name="stream">Stream to write object's bytes to.</param>
            <param name="obj">Object type of T to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.JsonCustomSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Custom deserialization callback for deserializing objects
            that are stored in ScaleOut StreamServer.
            </summary>
            <param name="stream">Stream containing the bytes returned from ScaleOut StreamServer.</param>
            <returns>The original object stored in ScaleOut StreamServer.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.JsonCustomSerializer.Serialize``1(System.IO.Stream,``0)">
            <summary>
            Custom serialization callback for serializing objects type of T
            to store them in ScaleOut StreamServer.
            </summary>
            <param name="stream">Stream to write object's bytes to.</param>
            <param name="obj">Object type of T to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.JsonCustomSerializer.Deserialize``1(System.IO.Stream)">
            <summary>
            Custom deserialization callback for deserializing objects type of T
            that are stored in ScaleOut StreamServer.
            </summary>
            <param name="stream">Stream containing the bytes returned from ScaleOut StreamServer.</param>
            <returns>The original object stored in ScaleOut StreamServer.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ByteArraySerializer">
            <summary>
            Internal static class used to serialize <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper"/>
            class to and from ScaleOut in-memory data grid as a sequence of bytes.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ByteArraySerializer.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes the specified object into a byte sequence.
            </summary>
            <param name="stream">The stream where the object is serialized to.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ByteArraySerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an object from the specified byte stream.
            </summary>
            <param name="stream">The stream with a serialized object.</param>
            <returns>The deserealized object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.TwinInstanceSerializer">
            <summary>
            Serializer that knows how to work with a twin instance that's stored
            in the following format:
            /-------------------------------------------\
            |  AppId   |  Digital |                     |
            |for Source|   Twin   | Digital Twin object |
            |namespace |  length  |                     |
            |-------------------------------------------|
            |  4 bytes |  4 bytes |                     |
            \-------------------------------------------/
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.TwinInstanceSerializer.#ctor(System.Type)">
            <summary>
            Public constructor.
            </summary>
            <param name="dtType"></param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.TwinInstanceSerializer.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes the specified object into a proprietary DT object format.
            </summary>
            <param name="stream">The stream where the object is serialized to.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.TwinInstanceSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an object from the specified byte stream.
            </summary>
            <param name="stream">The stream with a serialized object.</param>
            <returns>The deserealized object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage">
            <summary>
            <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/> is a wrapper around a user-defined payload originating 
            from a "SendToSource" operation in the processing context when the data source is a 
            Digital Twin Messaging REST Service.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.InstanceId">
            <summary>Unique digital twin instance identifier.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.Payload">
            <summary>Message payload.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.Timestamp">
            <summary>
            Message timestamp (UTC)
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.ToJson(Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage)">
            <summary>
            Serializes this type of object into the JSON formatted object.
            </summary>
            <param name="obj">The <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/> object to serialize.</param>
            <returns>The JSON formated object type of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/>.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.FromJson(System.String)">
            <summary>
            Deserializes the JSON object into the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/> instance.
            </summary>
            <param name="jsonObject">The JSON formated object type of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/></param>
            <returns>The <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/> type of object.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage.DeserializeMessages(System.Byte[])">
            <summary>
            Helper method to deserialize from the byte array returned from the
            server object to an enumerable of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DataSourceMessage"/>s.
            </summary>
            <param name="serverResult">Binary-encoded server object including log queue header.</param>
            <returns></returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration">
            <summary>
            Describes the digital twin model, containing the details of a user defined
            model type as well as names for its message processor and message types.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.AssemblyName">
            <summary>
            The name of user assembly where digital twin types are defined.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.ModelType">
            <summary>
            The type name of user defined digital twin class.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.MessageProcessorType">
            <summary>
            The type name of user defined MessageProcessor class.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.MessageType">
            <summary>
            The type name of user defined message class.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.ToJson(System.IO.Stream,Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration)">
            <summary>
            Helper method for serializing <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration"/> object
            to JSON stored as byte[].
            </summary>
            <param name="stream">Stream to write object's bytes to.</param>
            <param name="obj">Object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration.FromJson(System.IO.Stream)">
            <summary>
            Helper method for deserializing <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration"/> objects
            from JSON serialized stream.
            </summary>
            <param name="stream">Stream containing the serialized bytes of the 
            <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfiguration"/> object.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics.Name">
            <summary>
            Name of the Digital Twin model.
            </summary>
            <value>Name of the Digital Twin model.</value>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics.Status">
            <summary>
            Gets or Sets Status.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics.MessagesPerSecond">
            <summary>
            Gets or Sets MessagesPerSecond.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics.AverageMessageSize">
            <summary>
            Gets or Sets AverageMessageSize.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConnectorStatistics.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Public constructor.
            </summary>
            <param name="name">the name of the DigitalTwin connector</param>
            <param name="status">the status of the DigitalTwin connector</param>
            <param name="mps">the messages per second that the connector is sending to the DigitalTwin model</param>
            <param name="ams">the average message size</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata">
            <summary>
            Contains type information about user defined digital twin and
            message processor classes.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata.MessageProcessorType">
            <summary>
            Type information about user defined MessageProcessor class.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata.DigitalTwinType">
            <summary>
            Type information about user defined digital twin class.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata.MessageType">
            <summary>
            Type information about user defined message class.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata.ToJson(System.IO.Stream,System.Object)">
            <summary>
            Helper method for serializing <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata"/> object
            to JSON stored as byte[].
            </summary>
            <param name="stream">Stream to write object's bytes to.</param>
            <param name="obj">Object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata.FromJson(System.IO.Stream)">
            <summary>
            Helper method for deserializing <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata"/> objects
            from JSON serialized stream.
            </summary>
            <param name="stream">Stream containing the serialized bytes of the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinMetadata"/> object.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.Name">
            <summary>
            Name of the Digital Twin model.
            </summary>
            <value>Name of the Digital Twin model.</value>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.Status">
            <summary>
            Gets or Sets Status.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.AverageSize">
            <summary>
            Gets or Sets AverageSize.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.MessagesPerSecond">
            <summary>
            Gets or Sets MessagesPerSecond.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.TotalMessages">
            <summary>
            Gets or Sets the number of total messages.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.TotalInstances">
            <summary>
            Gets or Sets the number of total instances.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.TotalActiveInstances">
            <summary>
            Gets or Sets the number of total active instances.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.AverageMessageSize">
            <summary>
            Gets or Sets AverageMessageSize.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.NumberOfSendToTwinAndDatasourceRequests">
            <summary>The number of queued send to twins and send to datasource requests.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinModelStatistics.#ctor(System.String,System.String,System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int64,System.Int64,System.Int64)">
            <summary>
            Public constructor.
            </summary>
            <param name="name">the name of the DigitalTwin model</param>
            <param name="status">the status of the digital twin</param>
            <param name="totalMessages">the total number of messages</param>
            <param name="ams">the average message size</param>
            <param name="mps">the number of messages this model recieve per second</param>
            <param name="avs">the average message size</param>
            <param name="totalDts">the total number of digital twins</param>
            <param name="totalActiveDts">the total number of active digital twins</param>
            <param name="sendToTwinAndDatasourceRequests">The number of queued send to twins and send to datasource requests.</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper">
            <summary>
            Wraps the digital twin instance object.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper.SourceNamespaceAppId">
            <summary>
            ScaleOut AppId of the source namespace (Connector IG) where the messages are coming from.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper.DigitalTwinInstance">
            <summary>
            Deserialized instance of a <see cref="T:Scaleout.Streaming.DigitalTwin.Core.DigitalTwinBase"/> class.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper.InstanceSizeAsJson">
            <summary>Json representation of the digital twin instance.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper.#ctor(Scaleout.Streaming.DigitalTwin.Core.DigitalTwinBase,System.Type,System.UInt32,System.Int32)">
            <summary>
            Public constructor that allows to create an instance of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinWrapper"/>
            class from a serialized stream of bytes.
            </summary>
            <param name="dtInstance">Digital twin instance.</param>
            <param name="dtType">System.Type of instance.</param>
            <param name="sourceNamespaceAppId">AppId of the source namespace (Connector IG) where the messages are coming from.</param>
            <param name="instanceSizeAsJson">Size of instance (in bytes) when serialized as JSON. Use 0 if wrapping a newly-created DT instance.</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.EventInfoParameter">
            <summary>
            This class defines the layout of a JSON payload for the EventInfo parameter 
            used by NamedCache.PostEvent() method.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.EventInfoParameter.Model">
            <summary>
            Kind of user's digital twin ("car" vs. "windturbine"), etc.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.EventInfoParameter.Id">
            <summary>
            Unique identifier of a message data source (device Id) that is modeled by a digital twin.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.EventInfoParameter.Source">
            <summary>
            ScaleOut application Id where user messages are get posted to the grid.
            Typically it is AppId of Connector IG which listens on user messages from 
            event source like Azure IoT Hub, Kafka, etc.
            </summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ExceptionExtensions">
            <summary>
            The extension methods for working with exceptions.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExceptionExtensions.WriteTo(System.Exception)">
            <summary>
            Converts exception details into formatted string.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> object.</param>
            <returns>The string based representation of the specified <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExceptionExtensions.WriteTo(System.Exception,System.IO.TextWriter)">
            <summary>
            Writes exception information including error messages from all inner exceptions 
            into the formatted string.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> object.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> class as an abstract class which is
            implemented by either <see cref="T:System.IO.StringWriter"/> or <see cref="T:System.IO.StreamWriter"/> derived classes.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExceptionExtensions.WriteTo(System.Exception,System.Text.StringBuilder)">
            <summary>Uses InvariantCulture.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExceptionExtensions.WriteTo(System.Exception,System.Text.StringBuilder,System.IFormatProvider)">
            <summary>
            Writes exception information including error messages from all inner exceptions 
            into the formatted string.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> object.</param>
            <param name="stringBuilder">The <see cref="T:System.Text.StringBuilder"/> instance.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> object that controls formatting.</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfigurationException">
            <summary>
            The DigitalTwinConfigurationException is used to denote a special type of ExecutionEnvironmentException where the configuration of 
            a DigitalTwin model is incorrect.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfigurationException.#ctor">
            <summary>
            Creates a DigitalTwinConfigurationException.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfigurationException.#ctor(System.String)">
            <summary>
            Creates a DigitalTwinConfigurationException with a message.
            </summary>
            <param name="message">The message associated with this exception.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a DigitalTwinConfigurationException with a message and an inner exception. 
            </summary>
            <param name="message">The message associated with this exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinInstantiationException">
            <summary>
            The DigitalTwinInstantiationException is used to detect if a digital twin is unable to be instantiated by the 
            DigitalTwin service.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinInstantiationException.#ctor">
            <summary>
            Creates a DigitalTwinInstantiationException.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinInstantiationException.#ctor(System.String)">
            <summary>
            Creates a DigitalTwinInstantiationException with a message.
            </summary>
            <param name="message">The message associated with this exception</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.DigitalTwinInstantiationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a DigitalTwinInstantiationException with a message an an inner exception.
            </summary>
            <param name="message">The message associated with this exception</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ExecutionEnvironmentException">
            <summary>
            The ExecutionEnvironmentException is used to denote that an exception occured when establishing the execution environment.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExecutionEnvironmentException.#ctor">
            <summary>
            Creates a ExecutionEnvironmentException 
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExecutionEnvironmentException.#ctor(System.String)">
            <summary>
            Creates a ExecutionEnvironmentException with a message
            </summary>
            <param name="message">The message associated with this exception</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ExecutionEnvironmentException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a ExecutionEnvironmentException with a message and an inner exception
            </summary>
            <param name="message">The message associated with this exception</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.MessageInstantiationException">
            <summary>
            The MessageInstantiationException is used to detect if a Message is unable to be instantiated by the 
            DigitalTwin service.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageInstantiationException.#ctor">
            <summary>
            Creates a MessageInstantiationException
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageInstantiationException.#ctor(System.String)">
            <summary>
            Creates a MessageInstantiationException with a message.
            </summary>
            <param name="message">the message associated with this exception</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageInstantiationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a MessageInstantiationException with a message and inner exception.
            </summary>
            <param name="message">the message associate with this exception</param>
            <param name="innerException">the inner exception</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorInstantiationException">
            <summary>
            The MessageProcessorInstantiationException is used to detect if a messages processor is unable to be instantiated by the 
            DigitalTwin service.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorInstantiationException.#ctor">
            <summary>
            Creates a MessageProcessorInstantiationException
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorInstantiationException.#ctor(System.String)">
            <summary>
            Creates a MessageProcessorInstantiationException with a message.
            </summary>
            <param name="message">The message associated with this exception</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorInstantiationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a MessageProcessorInstantiationException with a message and an inner exception
            </summary>
            <param name="message">the messages associated with this exception </param>
            <param name="innerException">the inner exception</param>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.Helper">
            <summary>
            It's a helper class with static methods intended to be 
            shared between different components of .NET Digital Twin Library.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Helper.CreateDigitalTwinIGName(System.String)">
            <summary>
            Produces invocation grid name associated with the specified <paramref name="digitalTwinModelName"/>.
            </summary>
            <param name="digitalTwinModelName">The digital twin model name.</param>
            <returns>The name of the invocation grid that is associated with the specified twin model.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Helper.CreateConnectorIGName(System.String,System.String)">
            <summary>
            Constructs the IG name of digital twin related connector using the project convention.
            </summary>
            <param name="connectorId">Unique connector's identifier.</param>
            <param name="connectorType">Connector's type: e.g. "Azure", "Kafka", "AwsIoT" and "RestSvc".</param>
            <returns>The name of the invocation grid that is associated with the specified connector.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Helper.CreateConnectorStateObjectKey(System.String,System.String)">
            <summary>
            Constructs the string key for the connector's state object stored in the shared
            "__connector_metadata" namespace.
            </summary>
            <param name="connectorId">Unique connector's identifier.</param>
            <param name="connectorType">Connector's type: e.g. "Azure", "Kafka", "AwsIoT", etc.</param>
            <returns>The string key for the specified connector's state object.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Helper.CreateMsgRESTServiceTwinInstanceKey(System.String,System.String)">
            <summary>
            Constructs the string key for the twin instance of the <paramref name="modelName"/> related object 
            for the Messaging REST API service to consume (the object will be stored within the 
            "__scaleout_RESTConnector" namespace).
            </summary>
            <param name="modelName">Model name of the <paramref name="instanceId"/> digital twin instance.</param>
            <param name="instanceId">Digital twin instance Id.</param>
            <returns>The string key for the twin instance of the <paramref name="modelName"/> related object for the Messaging REST API service to consume.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Helper.InvokeAction(System.String,System.String)">
            <summary>
            Calls the specified out-of-proc command parser tool with the command line
            parameters constructed based on the received client action request.
            </summary>
            <param name="pathToCmdParserTool">Path to the command parser tool.</param>
            <param name="cmdLineParameters">Defined command line parameters.</param>
            <returns>The <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject"/> object with the status of executed action command.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject">
            <summary>
            Contains the result of some operation.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.Result">
            <summary>The result of operation: <c>true</c> indicates success, <c>false</c> is the failure.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.Message">
            <summary>The message associated with finished operation: in case of a failure it contains the error message for the caller.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.ReturnCode">
            <summary>The code associated with the finished operation: for any out-of-proc operations, this is the process exit code.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ResultObject.CreateErrorResult(System.String,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject"/> object
            with the specified error message, optional error code and the 
            <see cref="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.Result"/> member being set to <c>false</c>.
            </summary>
            <param name="errorMessage">The error message to set.</param>
            <param name="returnCode">The result code to return.</param>
            <returns>New instance of the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject"/> class.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.ResultObject.CreateHappyResult(System.String,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject"/> object
            with optionally specified status message and status code and the
            <see cref="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.Result"/> member being set to <c>true</c>.
            </summary>
            <param name="message">The status message to set (optional).</param>
            <param name="returnCode">The status code to return (optional).</param>
            <returns>New instance of the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ResultObject"/> class.</returns>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.IsSuccess">
            <summary>
            Checks the state of this class.
            </summary>
            <returns><c>true</c> if its internal state indicates a successful result, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.ResultObject.IsFailure">
            <summary>
            Checks the state of this class.
            </summary>
            <returns><c>true</c> if its internal state indicates a failed result, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.IMessageProcessorFactory`1">
            <summary>
            Interface that must be implemented by an message processor factory class.
            </summary>
            <typeparam name="TMessageProcessor">User defined message processor type.</typeparam>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.IMessageProcessorFactory`1.CreateMessageProcessor">
            <summary>
            Method to create instance of <typeref name="TMessageProcessor"/> for a digital twin object.
            </summary>
            <returns>An instance of <typeref name="TMessageProcessor"/></returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.LogMessage">
            <summary>
            The wrapper object over the specified logging message.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.LogMessage.Severity">
            <summary>
            The message severity level.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.LogMessage.Text">
            <summary>
            The message content.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.LogMessage.Timestamp">
            <summary>
            Message timestamp (UTC)
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessage.ToString">
            <summary>
            Overridden ToString that displays LogMessage contents as a string (displaying in local time zone).
            </summary>
            <returns>LogMessage as a string.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper">
            <summary>
            The helper class with methods defining
            the serialization protocol for logging user messages to be stored
            in the in-memory data grid.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes a digital twin related message to the proprietary format
            expected by ScaleOut StreamServer.
            </summary>
            <param name="stream">The stream with serialized message.</param>
            <param name="obj">The reference to the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.LogMessage"/> class.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper.DeserializeMessages(System.IO.Stream)">
            <summary>
            Deserializes stream of log messages.
            </summary>
            <param name="stream">Stream of serialized messages.</param>
            <returns>Collection of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.LogMessage"/> objects.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper.DeserializeMessages(System.Byte[])">
            <summary>
            Deserializes stream of log messages.
            </summary>
            <param name="serializedMessages">Serialized messages.</param>
            <returns>Enumerable of <see cref="T:Scaleout.Streaming.DigitalTwin.Common.LogMessage"/> objects.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper.LogLevelToLogSeverity(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            The mapping function between Microsoft <see cref="T:Microsoft.Extensions.Logging.LogLevel"/> enum and the one
            that is used by ScaleOut Digital Twin APIs (<see cref="T:Scaleout.Streaming.DigitalTwin.Core.LogSeverity"/>).
            </summary>
            <param name="level"><see cref="T:Microsoft.Extensions.Logging.LogLevel"/> enum value.</param>
            <returns>The corresponding <see cref="T:Scaleout.Streaming.DigitalTwin.Core.LogSeverity"/> enum value.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.LogMessageHelper.LogSeverityToLogLevel(Scaleout.Streaming.DigitalTwin.Core.LogSeverity)">
            <summary>
            The mapping function between ScaleOut Digital Twin APIs <see cref="T:Scaleout.Streaming.DigitalTwin.Core.LogSeverity"/> 
            enum and the one that is used by .NET Runtime (<see cref="T:Microsoft.Extensions.Logging.LogLevel"/>).
            </summary>
            <param name="severity"><see cref="T:Scaleout.Streaming.DigitalTwin.Core.LogSeverity"/> enum value.</param>
            <returns>The corresponding <see cref="T:Microsoft.Extensions.Logging.LogLevel"/> enum value.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorFactory`1">
            <summary>
            Default message processor factory implementation.
            </summary>
            <typeparam name="TMessageProcessor">User-defined message processor class type.</typeparam>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorFactory`1.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorFactory`1.#ctor(`0)">
            <summary>
            Public constructor.
            </summary>
            <param name="messageProcessor">Message processor instance.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageProcessorFactory`1.CreateMessageProcessor">
            <summary>
            Creates a new message processor.
            </summary>
            <returns>Message processor class instance of type <typeparamref name="TMessageProcessor"/>.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService">
            <summary>
            This is a base class for Message Broker Manager which can be used by a certain Digital Twin Connector,
            that listens for events from external source (such as Azure IoT Hub or Kafka) so it can relay them to 
            ScaleOut StreamServer for a real-time processing and analysis.
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService._logger">
            <summary>The instance of the Logger object, the Null logger is set by default.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService.LogCategory">
            <summary>The logging category name visible to a child class.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService.Send(System.String,System.String,System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Sends serialized messages to a digital twin object.
            </summary>
            <param name="digitalTwinModel">The target digital twin model type.</param>
            <param name="digitalTwinId">The target digital twin identifier.</param>
            <param name="messages">A list of serialized JSON encoded event messages to send.</param>
            <returns><see cref="F:Scaleout.Streaming.DigitalTwin.Core.SendingResult.Handled"/> when messages was successfully sent,
            <see cref="F:Scaleout.Streaming.DigitalTwin.Core.SendingResult.NotHandled"/> otherwise.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService.CreateMessageSender(System.String)">
            <summary>
            Abstract method which is overridden by the corresponding .NET Framework and .NET Core implementations.
            </summary>
            <param name="targetDigitalTwinModel">The target digital twin model type where messages need to be sent.</param>
            <returns></returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService.JsonifyParameters(System.String,System.String,System.UInt32)">
            <summary>
            Package the specified input parameters into the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.EventInfoParameter"/> object and
            creates its JSON representation.
            </summary>
            <param name="dtId">Digital twin identifier.</param>
            <param name="dtModel">The target digital twin model type where messages need to be sent.</param>
            <param name="source">ScaleOut namespace for a source component, whether it is a data source connector or a digital twin object, 
            which sends messages to another digital twin object.</param>
            <returns></returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.MessageSenderService.PackAsJsonArray(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Packs serialized messages into a JSON array.
            </summary>
            <param name="messages">List of serialized messages</param>
            <returns>Serialized messages as JSON array.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats">
            <summary>
            Stats that should be read and updated using atomic operations. 
            </summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.ObservedTwinKeys">
            <summary>Track unique DigitalTwin keys to calculate total active instances</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.EntityName">
            <summary>It can be either digital twin model name or connector name.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.Status">
            <summary>Status of the connector or DT model (Enabled/Disabled/Running/Stopped).</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.MessageCount">
            <summary>The number of messages this Connector/Model has seen.</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.MessageSizeTotal">
            <summary>The total serialized size of all messages</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.TotalDigitalTwinCount">
            <summary>The number of digital twins that have processed messages</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.TotalActiveDigitalTwinCount">
            <summary>The number of digital twins that have processed messages</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.DigitalTwinSizeTotal">
            <summary>The total serialized size of all digital twins that have processed messages</summary>
        </member>
        <member name="F:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats.SendToTwinAndDatasourceQueueLength">
            <summary>The number of queued send to twins and sent to datasource requests.</summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket">
            <summary>
            Used to keep a slice of collected stats related counters.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.#ctor(System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Interval bucket of counts and sizes.
            </summary>
            <param name="sec">The number of seconds elapsed for this bucket.</param>
            <param name="msgCount">The message count.</param>
            <param name="totalMsgSize">The total message size.</param>
            <param name="totalDtCount">The total count of digital twins.</param>
            <param name="totalActiveDtCount">The total count of active digital twins.</param>
            <param name="totalDtSize">The total dt size.</param>
            <param name="sendToTwinAndDatasourceRequests">The number of queued send to twins and send to datasource requests.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.Reset(System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Reset the bucket with new values.
            </summary>
            <param name="sec">The number of seconds elapsed for this bucket.</param>
            <param name="msgCount">The message count.</param>
            <param name="totalMsgSize">The total message size.</param>
            <param name="totalDtCount">The digital twin count.</param>
            <param name="totalDtSize">The total dt size.</param>
            <param name="totalActiveDtCount">The total number of active digital twins.</param>
            <param name="sendToTwinAndDatasourceRequests">The number of queued send to twins and send to datasource requests.</param>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.Name">
            <summary>
            The name of the DT connector/model.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.Status">
            <summary>
            The status of the DT connector/model.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.Seconds">
            <summary>
            The number of seconds elapsed in this bucket.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.MessageCount">
            <summary>
            The number of messages in this bucket.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.TotalMessageSize">
            <summary>
            The total serialized size of the messages in this bucket.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.TotalDigitalTwinCount">
            <summary>
            The total number of digital twins in this model.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.TotalActiveDigitalTwinCount">
            <summary>
            The total active number of digital twins observed in this bucket.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.TotalDigitalTwinSize">
            <summary>
            The total serialized size of the digital twins in this bucket.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.NumberOfSendToTwinAndDatasourceRequests">
            <summary>The number of queued send to twins and send to datasource requests.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket.Timestamp">
            <summary>The timestamp that indicates when bucket was the last time updated.</summary>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.StatisticsTimerService">
            <summary>
            Statistics timer service periodically (every second) reads statistics and stores the values in 
            a queue. To access the values, call the GetLatest() method.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatisticsTimerService.#ctor(System.String,System.String)">
            <summary>
            Initializes the statistics timer service.
            </summary>
            <param name="entityName">The name of this DT connector/model.</param>
            <param name="status">The status of this DT connector/model.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatisticsTimerService.ReadProcessorStats(System.Object)">
            <summary>
            The callback function handed to the timer which reads the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.ProcessorStats"/> 
            using atomic operations.
            </summary>
            <param name="stateInfo">unused</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatisticsTimerService.GetLatest">
            <summary>
            Returns the aggregate values of the last <see cref="F:Scaleout.Streaming.DigitalTwin.Common.StatisticsTimerService.maxSize"/> buckets.
            </summary>
            <returns>An aggregated bucket.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata">
            <summary>
            The metadata object that describes one target
            entity for collecting its statistics. The entity could be
            digital twin or connection.
            </summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.entityName">
            <summary>Entity name.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.entityType">
            <summary>Entity type - digital twin or connection.</summary>
        </member>
        <member name="P:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.language">
            <summary>The runtime this entity relies on - dotnet, java or node.</summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.#ctor(System.String,System.String,System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="en">Entity name.</param>
            <param name="et">Entity type.</param>
            <param name="lang">The language runtime the entity relies on.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.GetHashCode">
            <summary>
            Produces unique hash code for each class instances.
            </summary>
            <returns>Hash value of the class instance.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.Equals(System.Object)">
            <summary>
            Compares two instances of this class.
            </summary>
            <param name="obj">Another instance of this class.</param>
            <returns><c>true</c> if instances are the same, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata.Equals(Scaleout.Streaming.DigitalTwin.Common.StatsMetadata)">
            <summary>
            Determines whether this instance and a specified one are of the same type and have the same value.
            </summary>
            <param name="sm">Reference to the <see cref="T:Scaleout.Streaming.DigitalTwin.Common.StatsMetadata"/> class this instance needs to be compared with.</param>
            <returns><c>true</c> if <paramref name="sm"/> type and its value are the same as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.Toolbox">
            <summary>
            The helper class with shared static methods that can be used throughout the library.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.StreamToBytes(System.IO.Stream)">
            <summary>
            Transforms <see cref="T:System.IO.Stream"/> data to a byte array.
            </summary>
            <param name="input">The source stream.</param>
            <returns>Byte array from the specified stream.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.GetRandomValueFromTimeRange(System.DateTime,System.DateTime)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> value from
            the specified time interval.
            </summary>
            <param name="fromDate">The <see cref="T:System.DateTime"/> value, where the time interval starts.</param>
            <param name="toDate">The <see cref="T:System.DateTime"/> value, where the time interval ends.</param>
            <returns>Generated value from the specified time interval.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.GetNestedExceptionList(System.Exception)">
            <summary>
            Returns a string containing the exception message from <paramref name="exception"/>
            together with the messages from any nested (inner) exceptions.
            </summary>
            <param name="exception">
            The outermost exception.
            </param>
            <returns>
            A string suitable for inclusion in log messages containing the exception message
            of the outer exception and the exception messages of any inner exceptions.
            </returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.GetLocalIPAddress">
            <summary>
            Returns the first local IPv4 address.
            </summary>
            <returns>Local IPv4 address.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.AppendLineToEOF(System.String,System.String)">
            <summary>
            Useful for AdHoc troubleshooting when some state needs to be logged to some text file.
            </summary>
            <param name="logFilePath">Name of the text file with path to it.</param>
            <param name="logMessage">String message to log.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.RemoveWhitespaces(System.String)">
            <summary>
            Removes all space symbols from the specified string.
            </summary>
            <param name="str">The specified source string.</param>
            <returns>The string without white spaces.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.Aggregate(System.Collections.Generic.Queue{Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket})">
            <summary>
            Aggregates a queue of digital twin statistics interval buckets into a single bucket.
            </summary>
            <param name="buckets">Queue of the StatisticsIntervalBucket objects.</param>
            <returns>The aggregated version of all stats buckets.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.Merge(System.Collections.Generic.Queue{Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket})">
            <summary>
            Merges a queue of digital twin statistics interval buckets into a single bucket.
            </summary>
            <param name="buckets">Queue of the StatisticsIntervalBucket objects.</param>
            <returns>The merged version of all stats buckets.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.AverageBucketsForDigitalTwinModelStatistics(System.Collections.Generic.Queue{Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket})">
            <summary>
            Averages statistics buckets and produces digital twin model statistics.
            </summary>
            <param name="buckets">The buckets to average.</param>
            <returns>Digital twin model statistics.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.AverageBucketsForDigitalTwinConnectorStatistics(System.Collections.Generic.Queue{Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket})">
            <summary>
            Averages statistics buckets and produces digital twin connector statistics.
            </summary>
            <param name="buckets">The buckets to average.</param>
            <returns>Digital twin connector statistics.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.Average(System.Int64,System.Int64)">
            <summary>
            Abstraction for getting a double average.
            </summary>
            <param name="count">The number of elements.</param>
            <param name="total">The total of all elements.</param>
            <returns>The average value.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.SerializeStatsMetadataObject(System.IO.Stream,System.Object)">
            <summary>
            Serializes object to a json format.
            </summary>
            <param name="outputStream">The stream to write the object into.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.DeserializeStatsMetadataObject(System.IO.Stream)">
            <summary>
            Deserializes a json object into a list of the StatsMetadata entity objects.
            </summary>
            <param name="inputStream">The stream to read from.</param>
            <returns>A newly hydrated object.</returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.NamedCacheJsonSerializer(System.IO.Stream,System.Object)">
            <summary>
            Serializes out a json object.
            </summary>
            <param name="stream">The stream to write the object into.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.NamedCacheJsonDeserializer(System.IO.Stream)">
            <summary>
            Deserializes a json object.
            </summary>
            <param name="stream">The stream to read from.</param>
            <returns>A newly hydrated object.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Common.Toolbox.HashImpl">
            <summary>
            The Hash static class that has an implementation of the MurmurHash3 algorithm.
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Common.Toolbox.HashImpl.GetHash(System.Byte[])">
            <summary>
            Returns a hash that is suitable for inserting an object into a hash-based collection.
            </summary>
            <remarks>
            This is an implementation of the MurmurHash3 algorithm (MurmurHash3_x86_32, specifically).
            https://code.google.com/p/smhasher/
            (tweaked to be initialized with a hard-coded seed).
            </remarks>
            <param name="data">The byte array to be hashed</param>
            <returns>Hash code for the array.</returns>
        </member>
        <member name="T:Scaleout.Streaming.DigitalTwin.Processor.DigitalTwinStatisticsInvokable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Processor.DigitalTwinStatisticsInvokable.StatsEval(System.Object,System.String)">
            <summary>
            The eval delegate. Only retrieves and returns internal DT model state. Must be called as a part of 
            an invoke once.
            </summary>
            <param name="obj">unused</param>
            <param name="param">unused</param>
            <returns></returns>
        </member>
        <member name="M:Scaleout.Streaming.DigitalTwin.Processor.DigitalTwinStatisticsInvokable.StatsMerge(Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket,Scaleout.Streaming.DigitalTwin.Common.StatisticsIntervalBucket)">
            <summary>
            The merge delegate. Merges two stats buckets and returns. Must be called as a part of 
            an invoke once.
            </summary>
            <param name="bucket1"></param>
            <param name="bucket2"></param>
            <returns></returns>
        </member>
    </members>
</doc>
